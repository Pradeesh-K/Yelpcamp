app.get('/campgrounds', catchAsync(async (req, res) => {
    const campgrounds = await Campground.find({});
    res.render('campgrounds/index', { campgrounds });
}))

app.get('/campgrounds/new', (req, res) => {
    res.render('campgrounds/new');
})

app.get('/campgrounds/:id', catchAsync(async (req, res) => {
    const { id } = req.params;
    const campground = await Campground.findById(id).populate('reviews');
    res.render('campgrounds/show', { campground });
}))


app.post('/campgrounds', validateCampground, catchAsync(async (req, res) => {
    // console.log(req.body);
    // res.redirect(`campgrounds`);
    // if(!req.body.campground) throw new ExpressError('Invalid Campground Data',400);

    const newCampground = new Campground(req.body);
    await newCampground.save();
    res.redirect(`campgrounds/${newCampground._id}`);
}))

app.get('/campgrounds/:id/edit', catchAsync(async (req, res) => {
    const { id } = req.params;
    const campground = await Campground.findById(id);
    res.render('campgrounds/edit', { campground });
}))

app.put('/campgrounds/:id', validateCampground, catchAsync(async (req, res) => {
    const { id } = req.params;
    const campground = await Campground.findByIdAndUpdate(id, req.body, { runValidators: true, new: true });
    res.redirect(`/campgrounds/${campground._id}`);
}))


app.get('/makecampground', catchAsync(async (req, res) => {
    const camp = new Campground({ title: 'Heim', price: 100.60, description: 'small cozy wood cabin' });
    await camp.save();
    res.send(camp);
}))

app.delete('/campgrounds/:id',catchAsync(async (req, res) => {
    const { id } = req.params;
    const campground = await Campground.findByIdAndDelete(id);
    res.redirect(`/campgrounds`);
}))

app.post('/campgrounds/:id/reviews', validateReview, catchAsync(async (req, res) => {
    const { id } = req.params;
    const campground = await Campground.findById(id);
    const newReview = new Review(req.body);
    campground.reviews.push(newReview);
    await campground.save();
    await newReview.save();
    res.redirect(`/campgrounds/${campground._id}`);
}))

app.delete('/campgrounds/:id/reviews/:reviewId', catchAsync(async (req, res) => {
    const {id,reviewId} = req.params;
    await Campground.findByIdAndUpdate(id,{$pull:{reviews:reviewId}});
    await Review.findByIdAndRemove(reviewId);
    res.redirect(`/campgrounds/${id}`);
}))